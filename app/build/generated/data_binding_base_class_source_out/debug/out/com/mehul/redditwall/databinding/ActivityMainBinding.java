// Generated by view binder compiler. Do not edit!
package com.mehul.redditwall.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.mehul.redditwall.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ProgressBar bottomLoad;

  @NonNull
  public final Chip hotChip;

  @NonNull
  public final RecyclerView imageScroll;

  @NonNull
  public final TextView info;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final Chip newChip;

  @NonNull
  public final EditText search;

  @NonNull
  public final ImageButton searchButton;

  @NonNull
  public final ChipGroup sorting;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final Chip topChip;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull ProgressBar bottomLoad,
      @NonNull Chip hotChip, @NonNull RecyclerView imageScroll, @NonNull TextView info,
      @NonNull ProgressBar loading, @NonNull Chip newChip, @NonNull EditText search,
      @NonNull ImageButton searchButton, @NonNull ChipGroup sorting, @NonNull Toolbar toolbar,
      @NonNull LinearLayout top, @NonNull Chip topChip) {
    this.rootView = rootView;
    this.bottomLoad = bottomLoad;
    this.hotChip = hotChip;
    this.imageScroll = imageScroll;
    this.info = info;
    this.loading = loading;
    this.newChip = newChip;
    this.search = search;
    this.searchButton = searchButton;
    this.sorting = sorting;
    this.toolbar = toolbar;
    this.top = top;
    this.topChip = topChip;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomLoad;
      ProgressBar bottomLoad = rootView.findViewById(id);
      if (bottomLoad == null) {
        break missingId;
      }

      id = R.id.hotChip;
      Chip hotChip = rootView.findViewById(id);
      if (hotChip == null) {
        break missingId;
      }

      id = R.id.imageScroll;
      RecyclerView imageScroll = rootView.findViewById(id);
      if (imageScroll == null) {
        break missingId;
      }

      id = R.id.info;
      TextView info = rootView.findViewById(id);
      if (info == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = rootView.findViewById(id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.newChip;
      Chip newChip = rootView.findViewById(id);
      if (newChip == null) {
        break missingId;
      }

      id = R.id.search;
      EditText search = rootView.findViewById(id);
      if (search == null) {
        break missingId;
      }

      id = R.id.searchButton;
      ImageButton searchButton = rootView.findViewById(id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.sorting;
      ChipGroup sorting = rootView.findViewById(id);
      if (sorting == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = rootView.findViewById(id);
      if (top == null) {
        break missingId;
      }

      id = R.id.topChip;
      Chip topChip = rootView.findViewById(id);
      if (topChip == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, bottomLoad, hotChip, imageScroll,
          info, loading, newChip, search, searchButton, sorting, toolbar, top, topChip);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
